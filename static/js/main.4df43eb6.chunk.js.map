{"version":3,"sources":["App.styles.js","colors.js","components/Sidebar/Sidebar.styles.js","components/Sidebar/Sidebar.js","components/MainView/MainView.styles.js","components/MainView/Home/Home.js","components/MainView/About/About.js","components/MainView/Destinations/Destinations.js","components/MainView/Destinations/Country/Country.styles.js","components/MainView/Destinations/Country/Country.js","components/MainView/Blog/Blog.js","components/MainView/Services/Services.js","components/MainView/Contacts/Contacts.js","Routes.js","components/MainView/MainView.js","App.js","serviceWorker.js","index.js"],"names":["App","styled","div","brown","h1","bgColor1","bgColor2","fontColor","fontColorSelected","dividerColor","selectedBackgroundCollapsedMode","SidebarContainer","p","isSidebarOpen","colorPalette","backgroundImage","SidebarHeader","h3","font","MenuItemContainer","ItemContainer","MenuItem","selected","isOpen","Text","Icon","img","SubMenuItemContainer","SubMenuItem","DropdownIcon","span","TogglerContainer","Toggler","Sidebar","props","sidebarHeader","fullName","shortName","menuItems","fonts","header","menu","useState","name","setSelectedMenuItem","setSidebarState","setHeader","subMenusStates","setSubmenus","useLayoutEffect","path","window","location","pathname","parts","split","charAt","toUpperCase","selectedItem","slice","useEffect","setTimeout","updateWindowWidth","innerWidth","addEventListener","removeEventListener","newSubmenus","forEach","item","index","subMenuItems","length","toLowerCase","selectedSubItem","selectedItemIndex","findIndex","selectedSubItemIndex","subItem","Object","keys","menuItemsJSX","map","isItemSelected","hasSubmenus","subMenusJSX","subMenuItem","subMenuItemIndex","isSubmenuItemSelected","to","style","textDecoration","key","onClick","menuItemIdx","subMenuItemIdx","subMenusCopy","JSON","parse","stringify","handleSubMenuItemClick","hasOwnProperty","handleMenuItemClick","src","icon","nav","initial","opacity","y","animate","transition","duration","exit","x","MainViewContainer","Home","About","Destinations","CountryContainer","CountryImage","CountryDescription","Country","country","match","params","countries","canada","description","brazil","australia","india","moldova","kenya","Blog","Services","Contacts","Routes","exact","component","MainView","Palette","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4df43eb6.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const App = styled.div`\n  background: #ecf0f1;\n  height: 100vh;\n  display: flex\n`\n\nexport const Header = styled.h1`\n  color: pink\n`","export const dejaVu = {\n  bgColor1: 'rgba(252, 82, 150, 0.8)',\n  bgColor2: 'rgba(246, 112, 98, 0.8)',\n  fontColor: 'rgba(19, 15, 64)',\n  fontColorSelected: 'rgba(255, 255, 255)',\n  dividerColor: 'rgba(225, 112, 85)',\n  selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const swampy = {\n  bgColor1: 'rgba(11, 171, 100, 0.8)',\n  bgColor2: 'rgba(59, 183, 143, 0.8)',\n  fontColor: 'rgba(22, 46, 39)',\n  fontColorSelected: 'rgba(255, 255, 255)',\n  dividerColor: 'rgba(122, 204, 178)',\n  selectedBackgroundCollapsedMode: 'light'\n}\n\nexport const pinkAndBlue = {\n  bgColor1: 'rgba(126, 232, 250, 0.8)',\n  bgColor2: 'rgba(238, 192, 198, 0.8)',\n  fontColor: 'rgba(150, 93, 105)',\n  fontColorSelected: 'rgba(33, 22, 24)',\n  dividerColor: 'rgba(232, 213, 216)',\n  selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const julyBlue = {\n  bgColor1: 'rgba(100, 125, 238, 0.8)',\n  bgColor2: 'rgba(127, 83, 172, 0.8)',\n  fontColor: 'rgba(19, 15, 64)',\n  fontColorSelected: 'rgba(255, 255, 255)',\n  dividerColor: 'rgba(169, 139, 199)',\n  selectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const preDark = {\nbgColor1: 'rgba(67, 67, 67, 0.8)',\nbgColor2: 'rgba(0, 0, 0, 0.8)',\nfontColor: 'rgba(161, 161, 161)',\nfontColorSelected: 'rgba(255, 255, 255)',\ndividerColor: 'rgba(48, 48, 48)',\nselectedBackgroundCollapsedMode: 'light'\n}\n\nexport const brown = {\nbgColor1: 'rgba(149, 59, 32, 0.8)',\nbgColor2: 'rgba(87, 15, 10, 0.8)',\nfontColor: 'rgba(240, 178, 175)',\nfontColorSelected: 'rgba(255, 255, 255)',\ndividerColor: 'rgba(120, 64, 61)',\nselectedBackgroundCollapsedMode: 'dark'\n}\n\nexport const silver = {\nbgColor1: 'rgba(91, 100, 103, 0.8)',\nbgColor2: 'rgba(47, 67, 83, 0.8)',\nfontColor: 'rgba(176, 176, 176)',\nfontColorSelected: 'rgba(255, 255, 255)',\ndividerColor: 'rgba(94, 104, 107)',\nselectedBackgroundCollapsedMode: 'dark'\n}","import styled from '@emotion/styled';\n\nexport const SidebarContainer = styled.div`\n  width: ${p => p.isSidebarOpen ? '20%' : '5%'};\n  max-width: 280px;\n  min-width: 80px;\n  background-image: linear-gradient(\n    315deg,\n    ${p => p.colorPalette.bgColor1} 0%,\n    ${p => p.colorPalette.bgColor2} 74%),\n    url(${p => p.backgroundImage});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n  color: ${p => p.colorPalette.fontColorSelected};\n  position: relative; // Toggler\n  transition: .2s ease-in all\n`\n\nexport const SidebarHeader = styled.h3`\n  padding: 20px 0;\n  text-align: center;\n  margin-bottom: 10px;\n  letter-spacing: 6px;\n  font-family: ${p => p.font}\n`\n\nexport const MenuItemContainer = styled.div``;\nexport const ItemContainer = styled.div``;\n\n// Menu items -------------------------------------------------------------\nexport const MenuItem = styled.div`\n  ${p => !p.isSidebarOpen && `\n    text-align: center;\n    ${p.selected && `background-color: ${p.colorPalette.selectedBackgroundCollapsedMode === 'dark' ? 'rgba(0, 0, 0, 0.6)' : 'rgba(255, 255, 255, 0.6)'}`};\n  `};\n\n  padding: 6px 20px;\n  font-weight: 600;\n  color: ${p => p.selected ? p.colorPalette.fontColorSelected : p.colorPalette.fontColor} ;  \n  font-family: ${p => p.font};\n  white-space: nowrap;\n  position: relative; // Dropdown Icon\n  transition: .2s ease-in all;\n\n  &:hover {\n    color: ${p => p.colorPalette.fontColorSelected};\n    transition: .1s ease-in all;\n  }\n\n  &:after {\n    content: '';\n    border: 1px solid ${p => p.selected ? p.colorPalette.fontColorSelected : p.colorPalette.dividerColor};\n    display: ${p => p.isSidebarOpen && p.selected && p.isOpen ? 'none' : 'block'};\n    margin: 8px 0 4px;    \n    transition: .1s ease-in all;\n  };\n\n  ${p => !p.selected && `\n    &:hover {\n      &:after {\n        border: 1px solid rgba(255, 255, 255, 0.2);\n        transition: .1s ease-in all;\n      }\n    }\n  `}\n`;\n\nexport const Text = styled.p`\n  display: ${p => p.isSidebarOpen ? 'inline' : 'none'};\n`\n\nexport const Icon = styled.img`\n  ${p => p.isSidebarOpen && `padding-right: 20px; transition: .2s ease-in padding-right`};\n  height: 16px;\n  width: 16px;\n`\n\n// Sub menu items -------------------------------------------------------------------------\nexport const SubMenuItemContainer = styled.div`\n  font-size: 14px;\n  ${p => p.isSidebarOpen && 'padding-left: 15%'};  \n  ${p => !p.isSidebarOpen && 'text-align: center'};\n\n`;\nexport const SubMenuItem = styled.p`\n  color: ${p => p.selected ? p.colorPalette.fontColorSelected : p.colorPalette.fontColor};\n  ${p => p.selected && 'font-weight: bold; letter-spacing: 2px;'};\n  transition: .2s;\n\n  &:hover {\n    color: ${p => p.colorPalette.fontColorSelected}\n  }\n`;\n\n\n// Dropdown icon ----------------------------------------------------------------------\nexport const DropdownIcon = styled.span`\n  position: absolute;\n  top: ${p => p.isOpen ? '16px' : '12px'};\n  right: 24px;\n  border: solid ${p => p.selected ? p.colorPalette.fontColorSelected : p.colorPalette.fontColor};\n  border-width: 0 1px 1px 0;\n  padding: 3px;\n  transform: ${p => p.isOpen ? 'rotate(-135deg)' : 'rotate(45deg)'};\n  transition: .4s;\n`;\n\n// Toggler -----------------------------------------------------------------------------\nexport const TogglerContainer = styled.div`\n  position: absolute;\n  width: 30%;\n  bottom: 10%;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n`\n\nexport const Toggler = styled.div`\n    height: 40px;\n    cursor: pointer;\n    position: relative; // horizontal lines\n\n    &:after {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: .25em;\n      height: .1em;\n      width: 100%;\n      background: #fff;\n      box-shadow: \n        0 .75em 0 0 #fff,\n        0 1.5em 0 0 #fff;        \n    }\n`","import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { Link } from 'react-router-dom';\nimport * as s from './Sidebar.styles';\n\nconst Sidebar = props => {\n  const { \n    backgroundImage = '', \n    sidebarHeader = {\n      fullName: '',\n      shortName: ''\n    },\n    menuItems = [],\n    fonts = {\n      header: '',\n      menu: ''\n    },\n    colorPalette = {\n      bgColor1: 'rgba(11, 171, 100, 0.8)',\n      bgColor2: 'rgba(59, 183, 143, 0.8)',\n      fontColor: 'rgba(22, 46, 39)',\n      fontColorSelected: 'rgba(255, 255, 255)',\n      dividerColor: 'rgba(122, 204, 178)',\n      selectedBackgroundCollapsedMode: 'dark'\n    }\n  } = props;\n\n  // State\n  const [selected, setSelectedMenuItem] = useState(menuItems[0].name);\n  const [isSidebarOpen, setSidebarState] = useState(true);\n  const [header, setHeader] = useState(sidebarHeader.fullName);\n  const [subMenusStates, setSubmenus] = useState({})\n\n  // Effects\n\n  // Set selected menu item based on URL pathname\n  useLayoutEffect(() => {\n    const path = window.location.pathname;\n    const parts = path.split('/');\n\n    if (path !== '/' && parts[1].charAt(0).toUpperCase() !== menuItems[0].name) {\n      const selectedItem = parts[1].charAt(0).toUpperCase() + parts[1].slice(1);\n      setSelectedMenuItem(selectedItem)\n    }\n  }, [menuItems])\n\n  // Update of header state\n  useEffect(() => {\n    isSidebarOpen ? setTimeout(() => setHeader(sidebarHeader.fullName), 200) : setHeader(sidebarHeader.shortName);\n  }, [isSidebarOpen, sidebarHeader])\n\n\n  // Update of sidebar state\n  useEffect(() => {\n    const updateWindowWidth = () => {\n      if (window.innerWidth < 1280) setSidebarState(false);\n      else setSidebarState(true)\n    }\n\n    window.addEventListener('resize', updateWindowWidth);\n\n    return () => window.removeEventListener('resize', updateWindowWidth);\n  }, [isSidebarOpen]);\n\n\n  // Add index of items that contain sub menu items\n  useEffect(() => {\n    const newSubmenus = {};\n\n    menuItems.forEach((item, index) => {\n      const hasSubmenus = !!item.subMenuItems.length;\n\n      if (hasSubmenus) {\n        newSubmenus[index] = {};\n        newSubmenus[index]['isOpen'] = false;\n        newSubmenus[index]['selected'] = null;\n      }\n    })\n\n\n    // Set selected submenu if user landed on one\n    const path = window.location.pathname;\n    const parts = path.split('/');\n\n    if (parts.length === 3) {\n      const selectedItem = parts[1].toLowerCase();\n      const selectedSubItem = parts[2].toLowerCase()\n      const selectedItemIndex = menuItems.findIndex(item => item.name.toLowerCase() === selectedItem);\n      const selectedSubItemIndex = menuItems[selectedItemIndex]?.subMenuItems.findIndex(subItem => subItem.name.toLowerCase() === selectedSubItem);\n\n      if (selectedItemIndex !== -1) newSubmenus[selectedItemIndex]['isOpen'] = true;\n      if (selectedItemIndex !== -1 && selectedSubItemIndex !== -1) newSubmenus[selectedItemIndex]['selected'] = selectedSubItemIndex;\n    }\n\n    Object.keys(subMenusStates).length === 0 && setSubmenus(newSubmenus);\n  }, [menuItems, subMenusStates]);\n\n  const handleMenuItemClick = (name, index) => {\n    setSelectedMenuItem(name);\n\n    const subMenusCopy = JSON.parse(JSON.stringify(subMenusStates));\n\n    if (subMenusStates.hasOwnProperty(index)) { \n      subMenusCopy[index]['isOpen'] = !subMenusStates[index]['isOpen'] \n      setSubmenus(subMenusCopy)\n    }\n    else {\n      for (let item in subMenusStates) {\n        subMenusCopy[item]['isOpen'] = false;\n        subMenusCopy[item]['selected'] = null\n      }\n      setSubmenus(subMenusCopy);\n    }\n  }\n\n  const handleSubMenuItemClick = (menuItemIdx, subMenuItemIdx) => {\n    const subMenusCopy = JSON.parse(JSON.stringify(subMenusStates));\n\n    subMenusCopy[menuItemIdx]['selected'] = subMenuItemIdx;\n    setSubmenus(subMenusCopy);\n  }\n\n\n  const menuItemsJSX = menuItems.map((item, index) => {\n    const isItemSelected = selected === item.name;\n\n    const hasSubmenus = !!item.subMenuItems.length;\n    const isOpen = subMenusStates[index]?.isOpen;\n\n    const subMenusJSX = item.subMenuItems.map((subMenuItem, subMenuItemIndex) => {\n      const isSubmenuItemSelected = subMenusStates[index]?.selected === subMenuItemIndex;\n\n      return (\n        <Link to={`${item.to}${subMenuItem.to}`} style={{ textDecoration: 'none' }} key={subMenuItemIndex}>\n          <s.SubMenuItem\n            onClick={() => handleSubMenuItemClick(index, subMenuItemIndex)}\n            selected={isSubmenuItemSelected}\n            colorPalette={colorPalette}\n          >\n            {subMenuItem.name}\n          </s.SubMenuItem>\n        </Link>\n      )\n    })\n\n    return (\n      <s.ItemContainer key={index}>\n        <Link to={item.to} style={{ textDecoration: 'none' }}>\n          <s.MenuItem           \n            font={fonts.menu}\n            selected={isItemSelected}\n            onClick={() => handleMenuItemClick(item.name, index)}\n            isSidebarOpen={isSidebarOpen}\n            isOpen={isOpen}\n            colorPalette={colorPalette}\n          >\n            <s.Icon isSidebarOpen={isSidebarOpen} src={item.icon} />\n            <s.Text isSidebarOpen={isSidebarOpen}>{item.name}</s.Text>\n            {hasSubmenus && isSidebarOpen && (\n              <s.DropdownIcon selected={isItemSelected} isOpen={isOpen} colorPalette={colorPalette} />\n            )}\n          </s.MenuItem>\n        </Link>\n\n        {/* Display submenus if they exist  */}\n        <AnimatePresence>\n          {hasSubmenus && isOpen && (\n            <motion.nav \n              initial={{ opacity: 0, y: -15 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.35 }}\n              exit={{ opacity: 0, x: -30 }}\n            >\n              <s.SubMenuItemContainer isSidebarOpen={isSidebarOpen} colorPalette={colorPalette}>{subMenusJSX}</s.SubMenuItemContainer>\n            </motion.nav>\n          )}\n        </AnimatePresence>\n      </s.ItemContainer>\n    )\n  });\n\n  return (\n    <s.SidebarContainer backgroundImage={backgroundImage} isSidebarOpen={isSidebarOpen} colorPalette={colorPalette}>\n      <s.SidebarHeader font={fonts.header}>{header}</s.SidebarHeader>\n      <s.MenuItemContainer>{menuItemsJSX}</s.MenuItemContainer>\n      <s.TogglerContainer onClick={() => setSidebarState(!isSidebarOpen)}>\n        <s.Toggler />\n      </s.TogglerContainer>\n    </s.SidebarContainer>\n  )\n}\n\nexport default Sidebar","import styled from '@emotion/styled';\n\nexport const MainViewContainer = styled.div`\n  width: 80%;\n  padding: 100px;\n  text-align: center;\n\n  h1 {\n    font-size: 2rem\n  }\n`","import React from 'react';\n\nconst Home = () => {\n  return <h1>Welcome to Yo Yo Travel</h1>\n}\n\nexport default Home","import React from 'react';\n\nconst About = () => {\n  return <h1>About Page</h1>\n}\n\nexport default About","import React from 'react';\n\nconst Destinations = () => {\n  return <h1>Destinations Page</h1>\n}\n\nexport default Destinations","import styled from '@emotion/styled';\n\nexport const CountryContainer = styled.div`\n  width: 80%;\n  height: 200px;\n  margin: 20px auto 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport const CountryImage = styled.img`\n  width: 50%;\n  height: 200px;\n  background-image: url(${p => p.img});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n`\n\nexport const CountryDescription = styled.div`\n  width: 45%;\n`","import React from 'react';\nimport * as s from \"./Country.styles\";\n\nconst Country = props => {\n  const country = props.match.params.country;\n  const countries = {\n    canada: {\n      img: '/images/countries/canada.png',\n      description: 'Canada is chilly'\n    },\n    brazil: {\n      img: '/images/countries/brazil.jpg',\n      description: 'Brazil is sunny'\n    },\n    australia: {\n      img: '/images/countries/australia.jpg',\n      description: 'Australia is boring'\n    },\n    india: {\n      img: '/images/countries/india.jpg',\n      description: 'India is awesome'\n    },\n    moldova: {\n      img: '/images/countries/moldova.jpeg',\n      description: 'Moldova is beautiful'\n    },\n    kenya: {\n      img: '/images/countries/kenya.jpg',\n      description: 'Kenya is breathtaking'\n    }\n  }\n\n  return (\n    <s.CountryContainer>\n      <s.CountryImage img={countries[country]['img']} />\n      <s.CountryDescription>{countries[country]['description']}</s.CountryDescription>\n    </s.CountryContainer>\n  )\n}\n\nexport default Country","import React from 'react';\n\nconst Blog = () => {\n  return <h1>Blog</h1>\n}\n\nexport default Blog","import React from 'react';\n\nconst Services = () => {\n  return <h1>Services Page</h1>\n}\n\nexport default Services","import React from 'react';\n\nconst Contacts = () => {\n  return <h1>Contacts Page</h1>\n}\n\nexport default Contacts","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// Components\nimport Home from './components/MainView/Home/Home';\nimport About from './components/MainView/About/About';\nimport Destinations from './components/MainView/Destinations/Destinations';\nimport Country from './components/MainView/Destinations/Country/Country'\nimport Blog from './components/MainView/Blog/Blog';\nimport Services from './components/MainView/Services/Services';\nimport Contacts from './components/MainView/Contacts/Contacts';\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path='/' component={Home} />\n      <Route exact path='/about' component={About} />\n      <Route exact path='/destinations' component={Destinations} />\n      <Route exact path='/destinations/:country' component={Country} />\n      <Route exact path='/blog' component={Blog} />\n      <Route exact path='/services' component={Services} />\n      <Route exact path='/contacts' component={Contacts} />\n    </Switch>\n  )\n}\n\nexport default Routes","import React from 'react';\nimport * as s from './MainView.styles';\nimport Routes from '../../Routes'\n\nconst MainView = () => {\n  return (\n    <s.MainViewContainer>\n      <Routes />\n    </s.MainViewContainer>\n  )\n}\n\nexport default MainView","import React from 'react';\nimport * as s from './App.styles';\nimport * as Palette from './colors'\n\n// Components\nimport Sidebar from './components/Sidebar/Sidebar';\nimport MainView from './components/MainView/MainView'\n\n\nconst App = () => {\n  const backgroundImage = 'images/mountain.jpg';\n  const sidebarHeader = {\n    fullName: 'Yo Yo Travel',\n    shortName: 'YO'\n  };\n  const menuItems = [\n    {name: 'Home', to: '/', icon: '/icons/home.svg', subMenuItems: [] },\n    {name: 'About', to: '/about', icon: '/icons/about.svg', subMenuItems: [] },\n    {name: 'Destinations', to: '/destinations', icon: '/icons/destinations.svg', \n      subMenuItems: [\n        { name: 'Canada', to: '/canada'},        \n        { name: 'Brazil', to: '/brazil'},\n        { name: 'India', to: '/india'},\n        { name: 'Australia', to: '/australia'},\n        { name: 'Kenya', to: '/kenya'},\n        { name: 'Moldova', to: '/moldova'}\n      ] },\n    {name: 'Blog', to: '/blog', icon: '/icons/blog.svg', subMenuItems: [] },\n    {name: 'Services', to: '/services', icon: '/icons/services.svg', subMenuItems: [] },\n    {name: 'Contacts', to: '/contacts', icon: '/icons/contacts.svg', subMenuItems: [] }\n  ];\n\n  const fonts = {\n    header: 'ZCOOL KuaiLe',\n    menu: 'Poppins'\n  }\n\n  return (\n    <s.App>\n      <Sidebar\n        backgroundImage={backgroundImage}\n        sidebarHeader={sidebarHeader}\n        menuItems={menuItems}\n        fonts={fonts}\n        colorPalette={Palette.brown}\n      />\n      <MainView />\n    </s.App>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport './Global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}